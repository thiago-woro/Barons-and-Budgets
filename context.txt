project context:
this is a pure Javascript, browser only, 2D game, with a grid coordinates system. 
always use the Cell (x,y) row, column to refer to a cell. never use world coordinates. 
 example:  (`Cell X ${cellCol}, Y${cellRow}`);


Most used files:
globalvariables.js
index.html
npcClass.js
npcs.js
mapGen.js
camera.js
UI/toolManager.js
uitools.js
homes.js
animalClass.js
professions/fisher.js
game.js
utils.js
toolManager.js
professions/woodcutter.js
trees.js

NEVER DO THESE:
try to test the file. User checks manually.
Do not change style.css





j:\BaronsBudgets/
├── .cursor
├── .git
├── .gitignore
├── .prettierrc
├── .vscode
├── animalClass.js
│   └── Definitions:
│       ├── class Animal
│       │   ├── setAllPaused()
│       │   ├── herbivoreFindFood()
│       │   ├── getSpeciesFontSize()
│       │   ├── getFontSize()
│       │   ├── checkIfPredator()
│       │   ├── getEmoji()
│       │   ├── checkReproduction()
│       │   ├── detectNearbyAnimals()
│       │   ├── checkForKills()
│       │   ├── animateEmoji()
│       │   ├── drawAnimation()
│       │   ├── killAnimal()
│       │   ├── getDirectionTowardsOrAway()
│       │   ├── evaluateCellDesirability()
│       │   ├── getNextCell()
│       │   ├── ageDie()
│       │   ├── move()
│       │   └── draw()
│       └── functions:
│           ├── starterAnimalPopulations()
│           │   └── nested functions: starterAnimalPopulations, placeAnimals
│           ├── to()
│           │   └── nested functions: placeAnimals
│           ├── placeAnimals()
│           │   └── nested functions: placeAnimals
│           └── moveCoyote()
│               └── nested functions: moveCoyote
├── animations.js
│   └── Definitions:
│       └── class Animation
│           ├── create()
│           ├── draw()
│           ├── switch()
│           ├── updatePosition()
│           └── isComplete()
├── artistsThankYou.txt
├── game.js
│   └── Definitions:
│       ├── gameLoop()
│       │   └── nested functions: gameLoop
│       ├── updateAnimals()
│       │   └── nested functions: updateAnimals
│       ├── updateZoomTrackerUI()
│       │   └── nested functions: updateZoomTrackerUI
│       ├── saveGame()
│       │   └── nested functions: saveGame, prepareNPCsForSave, prepareBoatsForSave, prepareBuildingsForSave, prepareAnimalsForSave, prepareMapForSave
│       ├── prepareNPCsForSave()
│       │   └── nested functions: prepareNPCsForSave
│       ├── prepareBoatsForSave()
│       │   └── nested functions: prepareBoatsForSave
│       ├── prepareBuildingsForSave()
│       │   └── nested functions: prepareBuildingsForSave
│       ├── prepareAnimalsForSave()
│       │   └── nested functions: prepareAnimalsForSave
│       ├── prepareMapForSave()
│       │   └── nested functions: prepareMapForSave
│       ├── loadGame()
│       │   └── nested functions: loadGame
│       ├── signature()
│       └── drawPath()
│           └── nested functions: drawPath
├── globalvariables.js
│   └── Definitions:
├── homes.js
│   └── Definitions:
│       ├── class House
│       │   ├── playBuildSound()
│       │   ├── validateCells()
│       │   ├── findRandomAdjacentCell()
│       │   ├── draw()
│       │   └── addInhabitant()
│       ├── class Building
│       │   ├── addInhabitant()
│       │   ├── addUpgrade()
│       │   └── draw()
│       └── functions:
│           ├── to()
│           ├── drawSmallScatteredPaths()
│           │   └── nested functions: drawSmallScatteredPaths
│           ├── drawRectanglesBetweenHouses()
│           │   └── nested functions: drawRectanglesBetweenHouses
│           ├── bfsFindPath()
│           │   └── nested functions: bfsFindPath
│           ├── initializeBoat()
│           │   └── nested functions: initializeBoat
│           └── moveAndDrawBoat()
│               └── nested functions: moveAndDrawBoat
├── index.html
├── items.js
│   └── Definitions:
│       └── class Item
│           ├── add()
│           └── remove()
├── logformatter.html
├── package-lock.json
├── package.json
├── projectOutline.txt
├── push.bat
├── races.text
├── README.md
├── simulation.js
│   └── Definitions:
│       ├── class NPC
│       │   ├── ageAndDie()
│       │   ├── getMaleColor()
│       │   ├── getFemaleColor()
│       │   └── generateName()
│       ├── class PopulationManager
│       │   ├── calculateGrowth()
│       │   ├── setMaxPopulation()
│       │   ├── increasePopulation()
│       │   └── decreasePopulation()
│       └── functions:
│           ├── in()
│           │   └── nested functions: managePopulation8
│           ├── managePopulation8()
│           │   └── nested functions: managePopulation8
│           ├── gameLoop9()
│           │   └── nested functions: gameLoop9
│           ├── drawNPCs10()
│           │   └── nested functions: drawNPCs10
│           ├── console()
│           ├── addNPCToTable()
│           │   └── nested functions: addNPCToTable
│           └── sortNPCtable()
│               └── nested functions: sortNPCtable
├── style.css
├── todo.html
├── todo.txt
